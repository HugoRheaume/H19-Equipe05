@model NetflixPrjeq05.Models.Regle

<h2>Modifier une règle</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Regle</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RegleId)

    <table class="table">
        <tr>
            <td>Doublage</td>
            <td>Pourcentage visé</td>
            <td>Plus grand ou plus petit</td>
        </tr>
        <tr>
            <td>
                @Html.DropDownList("DoublageLangueId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DoublageLangueId, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.Pourcentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pourcentage, "", new { @class = "text-danger" })
            </td>
            <td>

                Minimum @Html.RadioButtonFor(model => model.EstPlusGrand, "true", new { id = "yesNoToaster" })
                Maximum @Html.RadioButtonFor(model => model.EstPlusGrand, "false", new { id = "yesNoToaster" })

                @Html.ValidationMessageFor(model => model.EstPlusGrand, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-warning" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
