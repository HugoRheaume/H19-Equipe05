@model PagedList.IPagedList<NetflixPrjeq05.Models.ContenuVM>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Contenu";
}

<h2>Contenu</h2>
<div>
    @using (Html.BeginForm("Contenu", "Contenus", FormMethod.Get))
    {
        @Html.DropDownList("id", ViewBag.Pays as SelectList, new { onchange = "this.form.submit();", @class = "form-control" })
        @Html.TextBox("searchTitle","", new { onchange = "this.form.submit();", @class = "form-control" })
    }
</div>
<p>
    @*Html.ActionLink("Create New", "Create")*@
</p>
<table class="table">
    <tr>                  
        <th>
            
            @Html.ActionLink("Titre", "Contenu", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
           
            @Html.ActionLink("DateSortie", "Contenu", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            
            @Html.ActionLink("Duree", "Contenu", new { sortOrder = ViewBag.DureeSortParm })
        </th>
        <th>
            Doublages
        </th>
        <th>
            Origines
        </th>
        <th>
            Affiche
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Titre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateSortie)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Duree)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Doublages)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Origines)
        </td>
        <td>
            <img src="@Html.DisplayFor(modelItem => item.Affiche)" width="150" height="200">
        </td>
        <td>

            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="@Html.Raw("#modalDelContenu" + item.ContenuId.ToString())"><i class="fas fa-trash-alt"></i></button>

            <div class="modal fade" id="@Html.Raw("modalDelContenu" + item.ContenuId.ToString())" tabindex="-1" role="dialog" aria-labelledby="ModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="ModalLabel">Supprimer un contenu</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Êtes-vous sûr de vouloir supprimé ce contenu du pays

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                            <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Contenus", new { id = item.ContenuId })';return false;">Supprimer</button>
                        </div>
                    </div>
                </div>
            </div>
        </td>
    </tr>
    }

</table>




<!--
<table>
    
    @foreach (var item in Model)
    {
     <tr>
    
        <table class="table" >
            <tr>
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.Affiche)" width="150" height="200">
                </td>
                <td>

                </td>
            
                <td>
                    <table>
                        <tr>
                            <td>
                                Titre : @Html.DisplayFor(modelItem => item.Titre)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Date de Sortie : @Html.DisplayFor(modelItem => item.DateSortie)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Durée : @Html.DisplayFor(modelItem => item.Duree)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Doublages : @Html.DisplayFor(modelItem => item.Doublages)
                            </td>
                        </tr>
                        <tr>

                            <td>
                                Origine : @Html.DisplayFor(modelItem => item.Origines)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Contenus", new { id = item.ContenuId })';return false;">Retirer</button>
                            </td>
                        </tr>
                    </table>
                    
                </td>
                

                
                

                
            </tr>
        </table>
    
     </tr>
    }
</table>-->





Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Contenu", new { page = page }))
